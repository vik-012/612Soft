---
import { supabase } from "@lib/supabaseClient.ts";
const { data: buttons, error: buttonsError } = await supabase
   .from("menu_button")
   .select("*")
   .eq("isactive", true);
if (buttonsError) {
   console.error("Error fetching buttons:", buttonsError.message);
}
---
<header class="fixed top-0 z-10 flex items-center justify-center w-full mx-auto mt-2">
   <nav class="flex px-3 text-sm font-medium rounded-full text-gray-700 dark:text-gray-200 justify-center items-center
   border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-100 py-2.5 me-2 mb-2 dark:bg-gray-80 dark:border-gray-600 dark:hover:bg-gray-900 dark:hover:border-gray-600 dark:focus:ring-gray-700">
      {
         buttons?.map((btn) => (
               <a class="relative block px-2 py-2 transition hover:text-purple-600" href={btn.url}>
                  {btn.text}
               </a>
         ))
      }
       <!-- <a class="relative block px-2 py-2 transition hover:text-blue-500 dark:hover:text-blue-500" aria-label="experiencia" href="/#experiencia"> Experiencia </a> -->
       <!-- <a class="relative block px-2 py-2 transition hover:text-blue-500 dark:hover:text-blue-500" aria-label="proyectos" href="/#proyectos"> Proyectos </a>
       <a class="relative block px-2 py-2 transition hover:text-blue-500 dark:hover:text-blue-500" aria-label="sobre-mi" href="/#sobre-mi"> Sobre m√≠ </a>
       <a class="relative block px-2 py-2 transition hover:text-blue-500 dark:hover:text-blue-500" aria-label="contacto" href="mailto:miduga@gmail.com"> Contacto </a> -->
       <div class="relative ml-1 mr-1">
           <button id="theme-toggle-btn" class="appearance-none border-none flex hover:scale-125 transition">
               <span class="sr-only">Elige el tema</span>
               <svg id="light" class="theme-toggle-icon size-5 transition-all" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                   <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                   <path d="M12 12m-4 0a4 4 0 1 0 8 0a4 4 0 1 0 -8 0"></path>
                   <path d="M3 12h1m8 -9v1m8 8h1m-9 8v1m-6.4 -15.4l.7 .7m12.1 -.7l-.7 .7m0 11.4l.7 .7m-12.1 -.7l-.7 .7"></path>
               </svg>
               <svg id="dark" class="theme-toggle-icon absolute size-5 transition-all" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                   <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                   <path d="M12 3c.132 0 .263 0 .393 0a7.5 7.5 0 0 0 7.92 12.446a9 9 0 1 1 -8.313 -12.454z"></path>
               </svg>
               <svg id="system" class="theme-toggle-icon absolute size-5 transition-all" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                   <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
                   <path d="M3 5a1 1 0 0 1 1 -1h16a1 1 0 0 1 1 1v10a1 1 0 0 1 -1 1h-16a1 1 0 0 1 -1 -1v-10z"></path>
                   <path d="M7 20h10"></path>
                   <path d="M9 16v4"></path>
                   <path d="M15 16v4"></path>
               </svg>
           </button>
           <div id="themes-menu" class="absolute hidden scale-80 top-8 right-0 text-sm p-1 min-w-[8rem] rounded-md border border-gray-100 bg-white/90 dark:bg-gray-900/90 dark:border-gray-500/20 shadow-[0_3px_10px_rgb(0,0,0,0.2)] backdrop-blur-md">
               <ul>
                   <li class="themes-menu-option px-2 py-1.5 cursor-default hover:bg-neutral-400/40 dark:hover:bg-gray-500/50 rounded-sm"> Light </li>
                   <li class="themes-menu-option px-2 py-1.5 cursor-default hover:bg-neutral-400/40 dark:hover:bg-gray-500/50 rounded-sm"> Dark </li>
                   <li class="themes-menu-option px-2 py-1.5 cursor-default hover:bg-neutral-400/40 dark:hover:bg-gray-500/50 rounded-sm"> System </li>
               </ul>
           </div>
       </div>

   </nav>
</header>
<script is:inline src="src/scripts/theme.ts"></script>
<!-- <script is:inline>
   let remove = null
   const matchMedia = window.matchMedia("(prefers-color-scheme: dark)")
   const themesMenu = document.getElementById("themes-menu")

   const getThemePreference = () => {
       if (typeof localStorage !== "undefined") {
           return localStorage.getItem("theme") ?? "system"
       }

       return window.matchMedia("(prefers-color-scheme: dark)").matches
       ? "dark"
       : "light"
   }

   const updateIcon = (themePreference) => {
       document.querySelectorAll(".theme-toggle-icon").forEach((element) => {
           element.style.scale = element.id === themePreference ? "1" : "0"
       })
   }

   const updateTheme = () => {
     console.log('updateTheme')
       if (remove != null) {
           console.log('remove is not null')
           remove()
       }
       console.log('add event listener')
       matchMedia.addEventListener("change", updateTheme)
       remove = () => {
           matchMedia.removeEventListener("change", updateTheme)
       }

       const themePreference = getThemePreference()
       console.log('themePreference', themePreference)
       const isDark =
       themePreference === "dark" ||
       (themePreference === "system" && matchMedia.matches)

       updateIcon(themePreference)
       document.documentElement.classList[isDark ? "add" : "remove"]("dark")
   }

   updateTheme()

   document.addEventListener("click", () => themesMenu?.classList.add("hidden"))

   document.getElementById("theme-toggle-btn")?.addEventListener("click", (e) => {
      console.log('theme-toggle-btn')
       e.stopPropagation()
       const isClosed = !themesMenu?.classList.contains("hidden")
       console.log('isClosed', isClosed)
       themesMenu?.classList[isClosed ? "add" : "remove"]("hidden")
   })

   document.querySelectorAll(".themes-menu-option").forEach((element) => {
       element.addEventListener("click", (e) => {
           localStorage.setItem("theme", e.target?.innerText?.toLowerCase().trim())
           updateTheme()
       })
   })

   document.addEventListener('astro:after-swap', () => {
       updateTheme();
       window.scrollTo({
           left: 0,
           top: 0,
           behavior: 'instant'
       });
   })
   </script> -->
